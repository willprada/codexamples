import math


print("Ejemplos del módulo math")
print()

print("math.ceil(x)")
print("Devuelve el valor entero inmediatamente superior o igual a x")
res = math.ceil(2.5)
print("2.5 =>", res)
res = math.ceil(3)
print("3 =>", res)
res = math.ceil(-2.8)
print("-2.8 =>", res)
print()

print("math.comb(n, k)")
print("Devuelve el número de formas de escoger k elementos de un conjunto de",
    "n elementos, sin repetir y sin orden.")
res = math.comb(3, 2)
print("De 3 elementos combinar 2")
print("{1, 2, 3} = {1,2}, {1,3}, {2,3}")
print("Total:", res)
res = math.comb(4, 2)
print("De 4 elementos combinar 2")
print("{1, 2, 3, 4} = {1,2}, {1,3}, {1,4}, {2,3}, {2,4}, {3,4}")
print("Total:", res)
res = math.comb(5, 2)
print("De 5 elementos combinar 2")
print("{1, 2, 3, 4, 5} = {1,2}, {1,3}, {1,4}, {1,5}, {2,3}, {2,4}, {2,5},",
    "{3,4}, {3,5}, {4,5}")
print("Total:", res)
res = math.comb(5, 3)
print("De 5 elementos combinar 3")
print("{1, 2, 3, 4, 5} = {1,2,3}, {1,2,4}, {1,2,5}, {1,3,4}, {1,3,5}, {1,4,5},",
    "{2,3,4}, {2,3,5}, {2,4,5}, {3,4,5}")
print("Total:", res)
res = math.comb(100, 3)
print("De 100 elementos combinar 3")
print("Total:", res)
print()

print("math.copysign(x, y)")
print("Devuelve un valor tipo float con la magnitud de x, pero con el signo",
    "de y")
res = math.copysign(-15, 2)
print("(-15, 2):", res)
res = math.copysign(15, -2)
print("(15, -2):", res)
res = math.copysign(1, -0)
print("(1, -0):", res)
print()

print("math.fabs(x)")
print("Devuelve el valor absoluto de x, pero siempre en tipo float")
res = math.fabs(-2)
print("-2:", res)
res = math.fabs(2)
print("2:", res)
res = math.fabs(-35)
print("-35:", res)
print()

print("math.factorial(x)")
print("Devuelve el factorial de x. El valor de x debe ser entero y positivo")
res = math.factorial(1)
print("1! =", res)
res = math.factorial(2)
print("2! =", res)
res = math.factorial(4)
print("4! =", res)
res = math.factorial(8)
print("8! =", res)
print()

print("math.floor(x)")
print("Devuelve el valor entero inmediatamente inferior o igual a x")
res = math.floor(8.9)
print("8.9 =>", res)
res = math.floor(-8.3)
print("-8.3 =>", res)
print()

print("math.fmod(x, y)")
print("Devuelve el resto de la división de x entre y, pero con precisión",
    "decimal")
res = math.fmod(100, 25)
print("100 % 25 = ", res)
res = math.fmod(7, 4)
print("7 % 4 = ", res)
res = math.fmod(7.7, 4)
print("7.7 % 4 = ", res)
print()

print("math.frexp(x)")
print("Devuelve la mantisa y el exponente como un par (m, e). m es flotante",
    "y e es un entero tal que x == m * 2**e exctamente")
res = math.frexp(5)
print("5 =>", res)
print(f"{res[0]} * 2**{res[1]} =", (res[0] * 2**res[1]))
res = math.frexp(4)
print("4 =>", res)
print(f"{res[0]} * 2**{res[1]} =", (res[0] * 2**res[1]))
res = math.frexp(7)
print("7 =>", res)
print(f"{res[0]} * 2**{res[1]} =", (res[0] * 2**res[1]))
res = math.frexp(10)
print("10 =>", res)
print(f"{res[0]} * 2**{res[1]} =", (res[0] * 2**res[1]))
print()

print("math.fsum(iter)")
print("Devuelve una suma precisa de los valores en el iterable")
res = math.fsum([.35, .2, .43, .89])
print("[.35, .2, .43, .89] = ", res)
res = math.fsum([.3, .3, .3, .3, .3, .3, .3])
print("[.3, .3, .3, .3, .3, .3, .3] = ", res)
print()

print("math.gcd(*enteros)")
print("Devuelve el máximo común divisor de todos los números enteros que se",
    "pasen cómo parámetros")
res = math.gcd(80, 100, 120, 140, 160)
print("MCD(80, 100, 120, 140, 160) =", res)
res = math.gcd(260, 280, 300, 320, 340)
print("MCD(260, 280, 300, 320, 340) =", res)
res = math.gcd(350, 1120, 1440, 1890, 2030)
print("MCD(350, 1120, 1440, 1890, 2030) =", res)
print()
